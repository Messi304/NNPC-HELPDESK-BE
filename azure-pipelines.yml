trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '52b2f512-9f98-4099-8741-8efbad822623'

  # Web app name
  webAppName: 'NNPChatbot'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'NNPChatbot'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.9
  pythonVersion: '3.9'

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        displayName: 'Build Job'
        steps:
          # Your build steps here

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'
              publishLocation: 'pipeline'

  # - stage: Deploy
  #   displayName: 'Deploy Stage'
  #   dependsOn: Build
  #   condition: succeeded()
  #   jobs:
  #     - deployment: DeployJob
  #       displayName: 'Deploy Job'
  #       pool:
  #         vmImage: $(vmImageName)
  #       environment: $(environmentName)
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - task: UsePythonVersion@0
  #                 inputs:
  #                   versionSpec: '$(pythonVersion)'
  #                 displayName: 'Use Python version'

  #               - task: AzureWebApp@1
  #                 displayName: 'Deploy Azure Web App : vms-new'
  #                 inputs:
  #                   azureSubscription: $(azureServiceConnectionId)
  #                   appName: $(webAppName)
  #                   package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
  #                   appType: webAppLinux
